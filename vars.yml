# =============================================================================
# LINUX HARDENED REPOSITORY - VARIABLES
# =============================================================================



#========================WARNING WARNING WARNING WARNING=======================
# This file will be deleted as the final part of the hardening script.
# This is to prevent passwords accidentally being left in plain text.
#========================WARNING WARNING WARNING WARNING=======================





# --- EXECUTION SWITCHES ------------------------------------------------------
# Set to yes/true to run storage configuration (LVM + XFS + mount).
configure_storage: yes
# Create a local admin user with sudo? (yes/no/true/false)
create_admin_user: yes
# Enable FIPS mode. This is required to acheive 100% DISA STIG compliance. 
# However is only supported via Red Hat based linux or paid-for Ubuntu Pro
enable_FIPS: yes
# Create GRUB user and password. Setting yes will overwrite any existing settings
# It is neccessary for 100% DISA STIG compliance
create_grub: yes
# Set max usernamespaces to 0. This will prohibit a machine from running containers
# If a machine needs to run containers this should be set to no.
user_namespaces: yes
# Configure NTP to use only the server directive not pools. 
# Setting this to yes will overwrite any existing configurations. 
# Requires specifying NTP servers below
setup_ntp: yes
# Will set up SSSD (see section below for more info)
setup_SSSD: yes

# --- STORAGE: DISKS ----------------------------------------------------------
# List block devices to use for the volume group (uncomment as needed).
vol_disks:
  - /dev/sdb
#  - /dev/sdc
#  - /dev/sdd
#  - /dev/sde
#  - /dev/sdg

# Total LV size. Examples: "500g", "100%FREE".
# Can be larger than a single disk (LVM spans PVs).
lvm_size: 25g
# Logical volume name.
vol_name: veeamvol
# Mount point for the filesystem.
vol_mount_point: /mnt/backupdata
# Volume group (LVM) name.
lvm_name: veeamlvm




# --- SECURITY / ACCOUNTS -----------------------------------------------------
# Default Veeam user password.
veeam_user_password: 1234!
# Service account name to be used.
veeam_user: vadmin
# Username for the local server admin account - with sudo.
serveradmin_name: serveradmin
# Password for the admin account.
serveradmin_password: 1234!
# Create a user for the bootloader - cannot be common names like root, admin, administrator
grub_superuser_name: grubuser
# Create a password for the bootloader user
grub_superuser_password: 1234!




# --- NTP CONFIGURATION -------------------------------------------------------
# DISA STIG requires specifying NTP servers specifically rather than pools
# list server names below
ntp_hostnames:
  - time.nist.gov
#  - time.google.com
#  - foo.example.com



# --- SSSD Configuration ----------------------------------------------------
# ---------------------------------------------------------------------------

# --- What SSSD is ---
# SSSD = System Security Services Daemon. Linux uses it to talk to AD/LDAP for
# identity, authentication, and access.
# To be DISA STIG compliant SSSD needs a certmap to validate a presented user certificate.
# A certmap tells SSSD:
#   (1) which directory "domain" to search,
#   (2) which certificates to accept,
#   (3) how to find the ONE user that owns the presented certificate.

# (1) DIRECTORY DOMAIN(S) TO SEARCH
certmap_domain_id: "testing.test"
# WHAT: Exact SSSD domain ID (the name inside [domain/<ID>] in /etc/sssd/sssd.conf).
# WHERE TO GET: From the AD/LDAP team.

certmap_search_domains: ["testing.test"]
# WHAT: Additional search domains names SSSD will search for the user.
# WHERE TO GET: From the AD/LDAP team; include trusted domains only if you must search them.

# (2) WHICH CERTIFICATES TO ACCEPT
certmap_matchrule: "<SAN>.*EDIPI@mil"
# WHAT: Acceptance filter for certs (match on SAN/UPN/email, Issuer DN, EKU, etc.; you can combine with &&).
# WHERE TO GET: From the PKI/certificate team; verify by inspecting a sample user cert.
# ---------------------------------------------------------------------------
# Common, valid MATCHRULE examples (paste ONE into certmap_matchrule)
# - Issuer DN is exactly your corporate CA:
#   "<ISSUER>^CN=Corp-CA,DC=example,DC=com$"
# - Must have client authentication EKU:
#   "<EKU>clientAuth"
# - AD UPN in SAN ends with your realm:
#   "<SAN:ntPrincipalName>.*@EXAMPLE\.COM"
# - Email in SAN is your mail domain:
#   "<SAN:rfc822Name>.*@example\.com"
# - Stricter combo (Issuer + EKU + UPN SAN):
#   "<ISSUER>^CN=Corp-CA,DC=example,DC=com$&&<EKU>clientAuth&&<SAN:ntPrincipalName>.*@EXAMPLE\.COM"

# (3) HOW TO MAP CERT → USER ACCOUNT
certmap_maprule: "(userCertificate;binary={cert!bin})"
# WHAT: LDAP filter rule that turns an accepted cert into a specific directory user.
# WHERE TO GET: From the AD/LDAP team (confirm which user attribute is populated and supported).
# WHY: If this doesn’t match how your directory stores/identifies users, logins will fail.
# Common, valid MAPRULE examples (paste ONE into certmap_maprule)
# - Exact certificate match (directory stores full cert on users):
#   "(userCertificate;binary={cert!bin})"
# - Derive identity from SAN UPN (works well with AD):
#   "(|(userPrincipalName={subject_nt_principal})(sAMAccountName={subject_nt_principal.short_name}))"
# - Derive identity from SAN email:
#   "(|(mail={subject_rfc822_name})(uid={subject_rfc822_name.short_name}))"
# - FreeIPA-style mapping using issuer/subject DNs:
#   "(ipaCertMapData=X509:<I>{issuer_dn!ad}<S>{subject_dn!ad})"

# label only
certmap_rule_name: "rule_4_DISA_STIG"
# WHAT: A short label for this mapping rule.


#
#
# ---------------------------------------------------------------------------
# This is what will be written into /etc/sssd/sssd.conf (certmap section):
#
# TEMPLATE (uses the variables)
# [certmap/{{ certmap_domain_id }}/{{ certmap_rule_name }}]
# matchrule = {{ certmap_matchrule }}
# maprule  = {{ certmap_maprule }}
# domains  = {{ certmap_search_domains | join(',') }}
#
# EXAMPLE (with the sample values below)
# [certmap/testing.test/rule_edipi]
# matchrule = <SAN>.*EDIPI@mil
# maprule  = (userCertificate;binary={cert!bin})
# domains  = testing.test
# ---------------------------------------------------------------------------





# --- NAMING DEFAULTS ---------------------------------------------------------


# --- COMPLIANCE / SCAP REPORTING --------------------------------------------
# Path to SSG content (datastreams).
ssg_dir: /usr/share/xml/scap/ssg/content
# DISA STIG profile ID.
ssg_profile: xccdf_org.ssgproject.content_profile_stig
# Filenames for pre/post scan results and reports.
results_file: initial_STIG_scan_results.xml
remediation_file: DISA_STIG_remediations.yml
report_file: initial_STIG_compliance_report.html
post_fix_results_file: post_fix_STIG_scan_results.xml
post_fix_report_file: post_fix_STIG_compliance_report.html
